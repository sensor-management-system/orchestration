# SPDX-FileCopyrightText: 2025 Hannes Bohring <hannes.bohring@ufz.de>
# SPDX-FileCopyrightText: 2025 Helmholtz Centre for Environmental Research GmbH - UFZ
#
# SPDX-License-Identifier: EUPL-1.2

sms:

  sms-backend:
    nginx:
      image:
        tag: "ufz-backend-1.23.1"

    backend:
      image:
        tag: "ufz-staging-1.23.1"

  sms-frontend:
    enabled: true
    image:
      repository: "registry.hzdr.de/hub-terra/sms/orchestration/generic-frontend"
      tag: "1.23.1"
    nginxConfig: |
      server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;
        root /usr/share/nginx/html/;

        location /sms {
            alias /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
      }
  
  sms-cv:
    enabled: true
    cv:
      enabled: true
      image:
        registry: "registry.hzdr.de"
        image: "hub-terra/sms/sms-cv"
        tag: "1.3.3"
      environmentVariables:
        - name: "DEBUG"
          value: "true"
        - name: CV_BASE_URL
          value: "sms/cv/"
        - name: CORS_ALLOW_ALL_ORIGINS
          value: "true"
        - name: CSRF_TRUSTED_ORIGINS
          value: "https://sms-cv.helmholtz.cloud"
        - name: STATIC_URL
          value: 'sms/cv/static/'
        - name: SQL_HOST
          value: 'sms-cv-db'
        - name: SQL_DATABASE
          value: 'sms-cv'
        - name: SQL_USER
          value: 'sms-cv'
        - name: SQL_PASSWORD
          value: "sms-cv"
        - name: CV_SECRET_KEY
          value: "SECRET_KEY"
        - name: GITLAB_TOKEN
          value: "GITLAB_TOKEN"
    cvbackup:
      enabled: false

    imagePullSecrets:
      - name: custom-rdm-sms.docker-registry

    ingress:
      enabled: true
      className: "nginx"
      annotations:
        cert-manager.io/cluster-issuer: "cert-manager-acme"
        cert-manager.io/private-key-algorithm: "ECDSA"
        cert-manager.io/private-key-size: "384"
        cert-manager.io/private-key-rotation-policy: "Always"
        nginx.ingress.kubernetes.io/enable-cors: "false"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          add_header 'X-Content-Type-Options' 'nosniff' always;
          add_header 'Content-Security-Policy' "default-src 'self'; script-src 'self' 'unsafe-inline'; img-src * data: ; style-src 'self' 'unsafe-inline' * ; font-src 'self' *; frame-src 'self' *.ufz.de ; child-src 'self' *.ufz.de ; object-src 'none' ; frame-ancestors 'self' http://*.ufz.de https://*.ufz.de ;connect-src https://*.ufz.de ;" always;
          add_header 'X-XSS-Protection' '1';
      hosts:
        - host: "web-intern-stage.app.ufz.de"
          paths:
            - path: /sms/cv/
              pathType: Prefix
      tls:
        - secretName: "web-intern-stage-app-ufz-de"
          hosts:
            - "web-intern-stage.app.ufz.de"

  sms-cv-db:
    enabled: true
    fullnameOverride: "sms-cv-db"
    global:
      postgresql:
        auth:
          username: "sms-cv"
          password: "sms-cv"
          database: "sms-cv"
          postgresPassword: "sms-cv"
    primary:
      persistence:
        enabled: false
  
  # dont deploy IDL - Stage-SMS uses Prod-IDL
  sms-idl:
    enabled: false

  # dont deploy local backend DB (central Postgres is used)
  sms-backend-db:
    enabled: false
