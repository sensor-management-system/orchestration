openapi: 3.0.1
info:
  title: Sensor Managment System SMS
  description: This is the API of the REST service endpoints for managing sensor metadata.
  termsOfService: '#'
  contact:
    email: kotyba.alhaj-taha@ufz.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: "1.0"
externalDocs:
  description: 'Learn more about requests and responses in JSON:API specs'
  url: 'https://jsonapi.org/format/#fetching-includes'
servers:
  - url: https://webapp-stage.intranet.ufz.de/rdm/svm-api/v1/
    description: UFZ Kubernetes Stage Cluster
  - url: http://localhost:5000/rdm/svm-api/v1/
    description: local development environment
tags:
  - name: Platforms
  - name: Devices
  - name: Contacts
paths:
  /platforms:
    get:
      tags:
        - Platforms
      summary: Retrieve a collection of Platforms
      operationId: getAllPlatforms
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PlatformResponse'
        '400':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Platforms
      summary: Creates a new Platform
      operationId: addNewPlatform
      requestBody:
        description: 'The needed json data to create a platform. '
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PlatformRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PlatformResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      x-codegen-request-body-name: body
  '/platforms/{platform_id}':
    get:
      tags:
        - Platforms
      summary: Retrieve details of a platform.
      operationId: getAPlatform
      parameters:
        - name: platform_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
           application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponsePlatform'
        '404':
          description: Platform not found
          content: {}
        '500':
           $ref: '#/components/responses/InternalServerError'
      x-codegen-request-body-name: body
    patch:
      tags:
        - Platforms
      summary: Modifies an existing platform. The JSON has to include the platform ID.
      operationId: modifyPlatform
      parameters:
        - name: platform_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: >-
          The needed JSON data to create a Platform.
        content:
           application/vnd.api+json:
            schema:
                $ref: '#/components/schemas/PlatformRequestWithID'

        required: true
      responses:
        '200':
          description: OK
          content:
           application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponsePlatform'
        '500':
           $ref: '#/components/responses/InternalServerError'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Platforms
      summary: 'Deletes the Platform with ID {platform_id}.'
      operationId: deletePlatform
      parameters:
        - name: platform_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
             application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectDeleted'
        '404':
          description: Platform not found
          content: {}
        '409':
          description: Platform still has references
          content: {}
        '500':
           $ref: '#/components/responses/InternalServerError'
  '/platforms/{platform_id}/relationships/contacts':
    get:
      tags:
        - Platforms
      summary: 'Retrieve relationships between a platform and contact'
      operationId: getRealationsofplatformToContact
      parameters:
        - name: platform_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '500':
           $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Platforms
      summary: 'Create relationships between a platform and contact'
      operationId: CreatePlatformToContact
      parameters:
        - name: platform_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
         description: >-
          The needed JSON data to create a Relationship.
         content:
           application/vnd.api+json:
            schema:
              $ref:  '#/components/schemas/AddARelationship'
      responses:
        '200':
            description: OK
            content:
               application/vnd.api+json:
                schema:
                  $ref: '#/components/schemas/ObjectAdded'
        '500':
           $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Platforms
      summary: 'Update relationships between a platform and contact'
      operationId: alterContacttofPlatform
      parameters:
        - name: platform_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
         description: >-
          The needed JSON data to create a Relationship.
         content:
           application/vnd.api+json:
            schema:
              $ref:  '#/components/schemas/AddARelationship'
      responses:
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Platforms
      summary: 'Delete relationships between two object'
      operationId: removeContactfromplatform
      parameters:
        - name: platform_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
         description: >-
          The needed JSON data to create a Relationship.
         content:
           application/vnd.api+json:
            schema:
              $ref:  '#/components/schemas/AddARelationship'
      responses:
        '500':
          $ref: '#/components/responses/InternalServerError'
  /devices:
    get:
      tags:
        - Devices
      summary: >-
        Returns all available items. The level of detail and the returned amount
        of items can be configured by qunery parameters.
      operationId: getAllItems
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponseDevices'
        '500':
           $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Devices
      summary: Create a device from JSON input
      operationId: CreateDevice
      requestBody:
        description: 'The needed json data to create a Device. '
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DeviceRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponseDevice'
        '400':
          description: Invalid JSON.
          content: {}
        '409':
          description: Device with same ShortName under one parent
          content: {}
        '422':
          description: Validation constraint violation .
          content: {}
        '500':
           $ref: '#/components/responses/InternalServerError'
      x-codegen-request-body-name: body
  '/devices/{device_id}':
    patch:
      tags:
        - Devices
      summary: Update a device from JSON input
      operationId: alterDevice
      parameters:
        - name: device_id
          in: path
          description: >-
            The ID of the item you want to update. The itemID in the JSON
            document will be ignored.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: >-
          The needed json data to update a Device.
        content:
           application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DeviceRequestWithID'
        required: true
      responses:
        '200':
          description: OK
          content:
           application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponseDevice'
        '400':
          description: Invalid JSON.
          content: {}
        '404':
          description: Item could not be found.
          content: {}
        '500':
           $ref: '#/components/responses/InternalServerError'
      x-codegen-request-body-name: body
    get:
      tags:
        - Devices
      summary: Get a Device by ID
      operationId: getDevice
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponseDevice'
        '404':
          description: Device not found .
          content: {}
        '500':
           $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Devices
      summary: 'remove a device.'
      operationId: removeDevice
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
             application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectDeleted'
        '500':
           $ref: '#/components/responses/InternalServerError'
  '/devices/{device_id}/relationships/contacts':
    get:
      tags:
        - Devices
      summary: 'Retrieve relationships between a devices and an event'
      operationId: getRealationsofDeviceToContact
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '500':
           $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Devices
      summary: 'Create relationships between a person and devices'
      operationId: CreateEventToContact
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
         description: >-
          The needed JSON data to create a Relationship.
         content:
           application/vnd.api+json:
            schema:
              $ref:  '#/components/schemas/AddARelationship'
      responses:
        '200':
            description: OK
            content:
               application/vnd.api+json:
                schema:
                  $ref: '#/components/schemas/ObjectAdded'
        '500':
           $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Devices
      summary: 'Update relationships between a platform and devices'
      operationId: alterContacttofDevice
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
         description: >-
          The needed JSON data to create a Relationship.
         content:
           application/vnd.api+json:
            schema:
              $ref:  '#/components/schemas/AddARelationship'
      responses:
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Devices
      summary: 'Delete relationships between two object'
      operationId: removeContactfromDevice
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
         description: >-
          The needed JSON data to create a Relationship.
         content:
           application/vnd.api+json:
            schema:
              $ref:  '#/components/schemas/AddARelationship'
      responses:
        '500':
          $ref: '#/components/responses/InternalServerError'
  /contacts:
    get:
      tags:
        - Contacts
      summary: >-
        Returns all available items.
        description: >-
        you can also use the endpoint '/devices/<int:id>/contacts' or
        '/paltforms/<int:id>/contacts'
      operationId: getAllContacts
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponseContact'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Contacts
      summary: Creates a contact from JSON input
      description: >-
        you can also use the endpoint '/devices/<int:id>/contacts'
      operationId: CreateContacts
      requestBody:
        description: 'The needed json data to create a contact. '
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestContact'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponseContact'
        '400':
          description: Invalid JSON.
          content: {}
        '404':
          description: Auth user or contact not found.
          content: {}
        '409':
          description: Device with same ShortName under one parent
          content: {}
        '422':
          description: Validation constraint violation .
          content: {}
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codegen-request-body-name: body
  '/contacts/{contact_id}':
    patch:
      tags:
        - Contacts
      summary: Update contacts from JSON input
      operationId: alterContacts
      parameters:
        - name: contact_id
          in: path
          description: >-
            The ID of the item you want to update. The itemID in the JSON
            document will be ignored.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: >-
          The needed json data to update a Device.
        content:
           application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestContact'
        required: true
      responses:
        '200':
          description: OK
          content:
           application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponseContact'
        '400':
          description: Invalid JSON.
          content: {}
        '404':
          description: Item could not be found.
          content: {}
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codegen-request-body-name: body
    get:
      tags:
        - Contacts
      summary: Get a contact by ID
      operationId: getContacts
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResponseContact'
        '404':
          description: Device not found .
          content: {}
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Contacts
      summary: 'remove contact.'
      operationId: removeContacts
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
             application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectDeleted'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  responses:
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
         application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description:  Error
      content:
         application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
         application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
          description: Access token is missing or invalid

  schemas:
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              source:
                type: object
                properties:
                  parameter:
                    type: string
              title:
                type: string
              detail:
                type: string
        jsonapi:
          $ref: '#/components/schemas/Jsonapi'
    Device:
      allOf:
        - $ref: '#/components/schemas/BaseDevice'
        - type: object
          properties:
            dual_use:
              type: boolean
              default: false
            customfields:
              type: array
              nullable: true
              items:
               $ref: '#/components/schemas/CustomField'
            device_properties:
              type: array
              nullable: true
              items:
               $ref: '#/components/schemas/Properties'
            device_attachments:
              type: array
              nullable: true
              items:
               $ref: '#/components/schemas/Attachment'
            events:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/Event'
    DeviceRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: device
            attributes:
                  $ref: '#/components/schemas/Device'
    DeviceRequestWithID:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: device
            id:
             type: integer
             format: int32
            attributes:
                  $ref: '#/components/schemas/Device'
    ResponseDevice:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: device
            attributes:
                allOf:
                  - $ref: '#/components/schemas/Device'
                  - $ref: '#/components/schemas/BasicResponse'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/Relationships'
        links:
          $ref: '#/components/schemas/Link'
        jsonapi:
          $ref: '#/components/schemas/Jsonapi'
    ResponseDevices:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: device
              attributes:
                    $ref: '#/components/schemas/Device'
              relationships:
                $ref: '#/components/schemas/Relationships'
        meta:
          type: object
          properties:
            count:
              type: integer
              format: int32
              example: 1
        links:
          type: object
          properties:
            self:
              type: string
              example: "/device/1"
        jsonapi:
          type: object
          properties:
            version:
              type: string
              example: "1.0"
    PlatformRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: platform
            attributes:
                allOf:
                  - $ref: '#/components/schemas/BaseDevice'
                  - $ref: '#/components/schemas/Platform'
    PlatformRequestWithID:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: device
            id:
             type: integer
             format: int32
            attributes:
                 allOf:
                  - $ref: '#/components/schemas/BaseDevice'
                  - $ref: '#/components/schemas/Platform'
    ResponsePlatform:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: platform
            id:
              type: integer
              format: int32
            attributes:
                 allOf:
                    - $ref: '#/components/schemas/BaseDevice'
                    - $ref: '#/components/schemas/Platform'
                    - $ref: '#/components/schemas/BasicResponse'
        relationships:
          type: object
          properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      example: contact
                    id:
                      type: integer
                      format: int32
                      example: 1
        links:
          type: object
          properties:
            self:
              type: string
              example: "/platform/1"
        jsonapi:
          type: object
          properties:
            version:
              type: string
              example: "1.0"
    PlatformResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: platform
              attributes:
                    $ref: '#/components/schemas/BaseDevice'
              rel:
                $ref: '#/components/schemas/Relationships'

        meta:
          type: object
          properties:
            count:
              type: integer
              format: int32
              example: 1
        links:
          $ref: '#/components/schemas/Link'
        jsonapi:
          $ref: '#/components/schemas/Jsonapi'
    BasicResponse:
      type: object
      properties:
        created_at:
          type: string
          format: date_time
          example: "2020-05-21T17:32:28Z"
        modified_at:
          type: string
          format: date_time
          example: "2020-06-23T17:32:28Z"
        created_by_id:
          type: integer
          format: int32
          example: 1
        modified_by_id:
          type: integer
          format: int32
          example: 2
        created_by:
          type: string
          example: device
        modified_by:
          type: string
          example: device
    Relationships:
      type: object
      properties:
        <object>:
          type: object
          properties:
            links:
              type: object
              properties:
                related:
                  type: string
                  example: "/<object>/{object_id}/<object>"
                self:
                  type: string
                  example: "/<object>/{object_id}/relationships/<objects>"
            data:
              $ref: '#/components/schemas/RelationshipData'
    Jsonapi:
          type: object
          properties:
            version:
              type: string
              example: "1.0"
    Event:
      required:
        - timestamp
        - description
      type: object
      properties:
        timestamp:
          type: string
          nullable: false
          description: Please only use UTC format
          format: date-time
        description:
          type: string
          nullable: false
        user:
          $ref: '#/components/schemas/User'
    RelationshipData:
      type: object
      properties:
          type:
            type: string
          id:
            type: integer
            format: int32
    BaseDevice:
      type: object
      properties:
        description:
          type: string
          nullable: true
        short_name:
          type: string
          nullable: false
        long_name:
          type: string
          nullable: true
        manufacturer_name:
          type: string
          nullable: true
          description: 'URI fields generally have a correspondending Name field as fallback'
        manufacturer_uri:
          type: string
          nullable: true
          description: 'From CV'
        model:
          type: string
          nullable: true
        inventory_number:
          type: string
          nullable: true
        serial_number:
          type: string
          nullable: true
        persistent_identifier:
          type: string
          nullable: true
          uniqueItems: true
        website:
          type: string
          nullable: true
          description: link to website
        devicetype_uri:
          type: string
          nullable: true
          description: ''
        devicetype_name:
          type: string
          nullable: true
          description: ''
    Platform:
      type: object
      properties:
        platform_type_name:
          type: string
          nullable: true
        platform_type_uri:
          type: string
          nullable: true
          description: 'From CV'
        status_name:
          type: string
          nullable: true
        status_uri:
          type: string
          nullable: true
          description: 'From CV'
        platform_attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    CustomField:
      required:
      - key
      type: object
      properties:
        key:
          type: string
          nullable: false
        value:
          type: string
          nullable: true
    AddARelationship:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: '<object>'
            id:
              type: integer
              format: int32
              example: 2
    Attachment:
      required:
      - url
      type: object
      properties:
        label:
          type: string
          nullable: true
        url:
          type: string
          nullable: false
    Contact:
      type: object
      properties:
        email:
          type: string
          nullable: false
        given_name:
          type: string
        family_name:
          type: string
        website:
          type: string
          nullable: true
    RequestContact:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: platform
            attributes:
                  $ref: '#/components/schemas/Contact'
    ResponseContact:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: device
              attributes:
                    $ref: '#/components/schemas/Contact'
              rel:
                $ref: '#/components/schemas/Relationships'
    User:
      type: object
      properties:
        subject:
          type: string
          nullable: false
          description: 'Subject retreived from the authentication token from the Identity Provider'
        contact:
          $ref: '#/components/schemas/Contact'
    Properties:
      type: object
      properties:
        measuring_range_min:
          type: integer
          format: float
          nullable: true
        measuring_range_max:
          type: integer
          format: float
          nullable: true
        failure_value:
          type: integer
          format: flaot
          nullable: true
        accuracy:
          type: integer
          format: flaot
          nullable: true
        label:
          type: string
          nullable: true
        unit_uri:
          type: string
          nullable: true
        unit_name:
          type: string
          nullable: true
        compartment_uri:
          type: string
          nullable: true
        compartment_name:
          type: string
          nullable: true
        property_uri:
          type: string
          nullable: true
        property_name:
          type: string
          nullable: true
        sampling_media_uri:
          type: string
          nullable: true
        sampling_media_name:
          type: string
          nullable: true
    ObjectAdded:
      type: object
      properties:
        meta:
          type: object
          properties:
            message:
              type: string
              example: "Object successfully created"
        jsonapi:
          type: object
          properties:
            version:
              type: string
              example: "1.0"
    ObjectDeleted:
      type: object
      properties:
        meta:
          type: object
          properties:
            message:
              type: string
              example: "Object successfully deleted"
        jsonapi:
          $ref: '#/components/schemas/Jsonapi'
    Link:
          type: object
          properties:
            self:
              type: string
              example: "/<object>/1"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenIdConnect:
      type: openIdConnect
      openIdConnectUrl: '###'
  links: {}
  callbacks: {}
security:
  - bearerAuth: []
  - OpenIdConnect: []