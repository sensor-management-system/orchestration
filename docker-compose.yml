version: '3.9'
services:
  smses01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: smses01
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  app:
    image: python:3.9-slim-buster
    container_name: backend
    working_dir: /usr/src/app
    volumes:
      - './app:/usr/src/app'
    ports:
      - "${HTTP_LOCAL_BINDING:-127.0.0.1:5000}:5000"
    env_file:
      - ./app_env/compose.env
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-admin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minio123}
      MINIO_SECURE: ${MINIO_SECURE:-False}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-sms-attachments}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-minio:9000}
      DOWNLOAD_ENDPOINT: ${DOWNLOAD_ENDPOINT:-https://localhost.localdomain}
    depends_on:
      - db
    command: >
      sh -c "
      apt-get update && apt-get install -y  --no-install-recommends \
        gcc \
        libssl-dev \
        libffi-dev \
        musl-dev \
        cargo \
      && apt-get clean
      && pip install --no-cache-dir --upgrade pip
      && pip install --no-cache-dir -r requirements.txt
      && python manage.py db upgrade
      && gunicorn -b 0.0.0.0:5000 manage:app --reload
      "

  db:
    image: postgres:12-alpine
    container_name: db
    ports:
      - "${HTTP_LOCAL_BINDING:-127.0.0.1:5432}:5432"
    env_file:
      - ./app_env/db_secrets.env
    volumes:
      - ./app/project/db/create.sql:/docker-entrypoint-initdb.d/create.sql
  minio:
    image: minio/minio:RELEASE.2021-07-12T02-44-53Z
    container_name: minio
    volumes:
      - data:/data/minio
    ports:
      - "${HTTP_LOCAL_BINDING:-127.0.0.1:9000}:9000"
      - "${HTTP_LOCAL_BINDING:-127.0.0.1:9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-admin}
      MINIO_ROOT_PASSWORD: ${minio_user_password:-minio123}
#       To deactivate the console
#      MINIO_BROWSER: "off"
    command: server /data/minio --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    # Make a Bucket using minio client mc
    # https://docs.min.io/docs/minio-client-complete-guid
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc  alias set minio http://minio:9000 ${MINIO_ACCESS_KEY:-admin1} ${MINIO_SECRET_KEY:-minio123} --api S3v4;
      /usr/bin/mc mb --quiet minio/${MINIO_BUCKET_NAME};
      /usr/bin/mc policy set download minio/${MINIO_BUCKET_NAME};
      exit 0;
      "


  nginx:
    image: nginx:1.20-alpine
    container_name: nginx
    network_mode: "host"
    volumes:
      - ./ngnix/index.html:/usr/share/nginx/html/index.html
      - ./ngnix/certs:/etc/nginx/ssl
      - ./ngnix/default.conf:/etc/nginx/conf.d/rdm-test.intranet.ufz.de.conf:ro
      - ./ngnix/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  esdata01:
    driver: local
  data:


