version: '3.9'
services:
  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  backend:
    image: python:3.9-slim-buster
    working_dir: /usr/src/app
    volumes:
      - './app:/usr/src/app'
      - './scripts:/usr/src/app/scripts'
    ports:
      - "127.0.0.1:5000:5000"
    environment:
      FLASK_DEBUG: ${FLASK_DEBUG:-1}
      URL_PREFIX: ${URL_PREFIX:-/backend/rdm/svm-api/v1}
      STATIC_URL: ${STATIC_URL:-/static/backend}
      APP_SETTINGS: ${APP_SETTINGS:-project.config.DevelopmentConfig}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL:-http://elastic-search:9200}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5433/db_dev}
      DATABASE_TEST_URL: ${DATABASE_TEST_URL:-postgresql://postgres:postgres@db:5433/db_test}
      OIDC_USERNAME_CLAIM: ${OIDC_USERNAME_CLAIM:-sub}
      HTTP_ORIGINS: ${HTTP_ORIGINS:-https://localhost.localdomain}
      WELL_KNOWN_URL: ${WELL_KNOWN_URL:-https://webapp.ufz.de/idp/oidc/v1/.well-known/openid-configuration}
      OIDC_CLIENT_IDS: ${OIDC_CLIENT_IDS:-rdmsvm-implicit-flow}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-admin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minio123}
      MINIO_SECURE: ${MINIO_SECURE:-False}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-sms-attachments}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-minio:9000}
      DOWNLOAD_ENDPOINT: ${DOWNLOAD_ENDPOINT:-https://localhost.localdomain}
      ALLOWED_MIME_TYPES: ${ALLOWED_MIME_TYPES}
      SMS_IDL_TOKEN: ${SMS_IDL_TOKEN}
      IDL_URL: ${IDL_URL}
    depends_on:
      - db
    command: >
      sh -c "
      scripts/install.sh
      && scripts/run.sh ${DATABASE_URL:-postgresql://postgres:postgres@db:5433/db_dev} ${BACKEND_PORT:-5000}"

  db:
    image: postgres:12-alpine
    ports:
      - "127.0.0.1:5433:5433"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./app/project/db/create.sql:/docker-entrypoint-initdb.d/create.sql
    command: -p 5433

  minio:
    image: minio/minio:RELEASE.2021-07-12T02-44-53Z
    container_name: minio
    volumes:
      - data:/data/minio
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-admin}
      MINIO_ROOT_PASSWORD: ${minio_user_password:-minio123}
    #       To deactivate the console
    #      MINIO_BROWSER: "off"
    command: server /data/minio --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    # Make a Bucket using minio client mc
    # https://docs.min.io/docs/minio-client-complete-guid
    entrypoint: >
      /bin/sh -c "
      until curl -f http://minio:9000/minio/health/live; do sleep 5; done;
      /usr/bin/mc  alias set minio http://minio:9000 ${MINIO_ACCESS_KEY:-admin} ${MINIO_SECRET_KEY:-minio123} --api S3v4;
      /usr/bin/mc mb --quiet minio/${MINIO_BUCKET_NAME:-sms-attachments};
      /usr/bin/mc policy set download minio/${MINIO_BUCKET_NAME:-sms-attachments};
      exit 0;
      "

  nginx:
    image: nginx:1.20.1-alpine
    ports:
      - 443:443
      - 8443:8443
    volumes:
      - ./nginx/index.html:/usr/share/nginx/html/index.html
      - ./nginx/certs:/etc/nginx/ssl
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./app/project/static:/usr/share/nginx/html/static/backend:ro

volumes:
  esdata01:
    driver: local
  data:


