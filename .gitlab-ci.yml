stages:
  - build
  - test
  - release

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CONTAINER_TEST_IMAGE

unittest-lint:
  stage: test
  image: $CI_REGISTRY_IMAGE
  before_script:
    - apk add --no-cache --update python3-dev  gcc build-base curl
    - pip install --upgrade setuptools
    - pip install --upgrade flake8
    - pip install setuptools pylint pylint-exit pylint_flask pylint_flask_sqlalchemy
  script:
    - flake8 --max-line-length=100 --ignore F401,W504 $CI_PROJECT_DIR/app/project
    - pylint $CI_PROJECT_DIR/app/project --rcfile=$CI_PROJECT_DIR/app/.pylintrc| tee pylint.txt || pylint-exit $?
    - score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
    - curl https://img.shields.io/badge/lint%20score-$score/10-blue.svg  > $CI_PROJECT_DIR/docs/pylint.svg
    - echo "Pylint score was $score"

  artifacts:
    paths:
      - pylint.txt

test-image:
  services:
    - postgres:12.2-alpine
  variables:
    POSTGRES_DB: db_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
  stage: test
  image: $CONTAINER_TEST_IMAGE
  before_script:
    - apk add --no-cache --update build-base libressl-dev  libffi-dev
    - pip install --upgrade setuptools
    - pip install cryptography
    - export APP_SETTINGS=project.config.TestingConfig
    - export DATABASE_TEST_URL=postgres://$POSTGRES_USER:@$POSTGRES_PASSWORD:5432/$POSTGRES_DB
    - export WELL_KNOWN_URL=https://webapp-stage.intranet.ufz.de/idp/oidc/v1/.well-known/openid-configuration
  script:
    - cd $CI_PROJECT_DIR/app/ && python manage.py test

release-image:
  stage: release
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "FROM  ${CONTAINER_TEST_IMAGE}" | /kaniko/executor --context $CI_PROJECT_DIR --dockerfile /dev/stdin --destination ${CONTAINER_RELEASE_IMAGE}
  only:
    - master
