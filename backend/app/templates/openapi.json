{
  "openapi": "3.0.3",
  "info": {
    "title": "Sensor Management System SMS",
    "description": "REST API for managing sensor metadata. This API is based on {json:api} specification see: https://jsonapi.org/",
    "version": "{{ backend_version }}",
    "contact": {
      "email": "gitlab-incoming+hub-terra-sms-orchestration-3268-issue-@hzdr.de",
      "name": "SMS Service-Desk",
      "url": "https://codebase.helmholtz.cloud/hub-terra/sms/orchestration"
    },
    "license": {
      "url": "https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12",
      "name": "EUPL"
    },
    "termsOfService": "{{ term_of_use_url }}"
  },
  "tags": [{
      "name": "Devices",
      "description": "Manage the devices that can measure data"
  }, {
      "name": "Platforms",
      "description": "Manage the platforms where devices can be mounted"
  }, {
      "name": "Configurations",
      "description": "Manage the configuration where devices and platforms are used"
  }, {
      "name": "Sites",
      "description": "Manage sites to group configurations"
  }, {
      "name": "Contacts",
      "description": "Manage contacts"
  }, {
      "name": "Contact roles",
      "description": "Manage the roles of the contacts"
  }, {
      "name": "Device properties",
      "description": "Manage information about what the devices can measure"
  }, {
      "name": "Device mount actions",
      "description": "Manage the usage of devices in configurations"
  }, {
      "name": "Platform mount actions",
      "description": "Manage the usage of platforms in configurations"
  }, {
      "name": "Static location actions",
      "description": "Manage static locations of configurations (stations, ...)"
  }, {
      "name": "Dynamic location actions",
      "description": "Manage dynamic locations of configurations (vessels, rovers, ...)"
  }, {
      "name": "Tsm endpoints",
      "description": "Get information about supported endpoints for datastream linking"
  }, {
      "name": "Datastream links",
      "description": "Manage links of the metadata to the datastreams of TSM systems"
  }, {
      "name": "User",
      "description": "Manage your own user information"
  }, {
      "name": "Permission groups",
      "description": "Get information about the permission groups"
  }],
  "paths": {
    {% for path in paths %}
    "{{ path }}": {{ paths[path]}} {% if not loop.last %},{%endif %}
    {% endfor %}
  },
  "security": [
    {
      "oauth2": [
      ],
      "ApiKeyAuth": []
    }
  ],
  "servers": [{% for server in servers %}
    {
      "url": "{{server.url}}",
      "description": "{{server.description}}"
    }{% if not loop.last %},{% endif %}{% endfor %}
  ],
  "components": {
    "requestBodies": {
      "Contact_inst": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "given_name": {
                          "type": "string"
                        },
                        "family_name": {
                          "type": "string"
                        },
                        "website": {
                          "type": "string",
                          "format": "url"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      }
                    }
                  },
                  "example": {
                    "attributes": {
                      "given_name": "",
                      "family_name": "",
                      "website": "",
                      "email": ""
                    },
                    "type": "Contact",
                    "id": "0"
                  }
                }
              },
              "description": "Contact patch;Contact post;Contact delete;Contact patch;Contact post;Contact delete;"
            }
          }
        }
      },
      {% for component in request_body_components %}
      "{{ component }}": {{ request_body_components[component]}} {% if not loop.last %},{%endif %}
      {% endfor %}
    },
    "securitySchemes": {
      {% if token_endpoint and authorization_endpoint %}
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "{{ authorization_endpoint }}",
            "tokenUrl": "{{ token_endpoint }}",
            "refreshUrl": "",
            "scopes": {
            }
          }
        }
      },
      {% endif %}
      "ApiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "X-APIKEY"
      }
    },
    "schemas": {
      {% for schema in schema_components %}
      "{{ schema }}": {{ schema_components[schema]}} {% if not loop.last %},{%endif %}
      {% endfor %}
    },
    "responses": {
      "object_deleted": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "example": {
                    "message": "Object successfully deleted"
                  },
                  "type": "string"
                },
                "jsonapi": {
                  "example": {
                    "version": "1.0"
                  },
                  "type": "object"
                }
              },
              "description": "delete an object;"
            }
          }
        },
        "description": "Delete an Object"
      },
      "jsonapi_error_406": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "properties": {
                "errors": {
                  "example": {
                    "title": "Not Acceptable",
                    "detail": "",
                    "code": "406"
                  },
                  "type": "string"
                }
              },
              "description": ""
            }
          }
        },
        "description": "406 Error"
      },
      "jsonapi_error_403": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "properties": {
                "errors": {
                  "example": {
                    "title": "Request forbidden -- authorization will not help",
                    "detail": "",
                    "code": "403"
                  },
                  "type": "string"
                }
              },
              "description": ""
            }
          }
        },
        "description": "403 Error"
      },
      "jsonapi_error_404": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "properties": {
                "errors": {
                  "example": {
                    "title": "Nothing matches the given URI",
                    "detail": "",
                    "code": "404"
                  },
                  "type": "string"
                }
              },
              "description": ""
            }
          }
        },
        "description": ""
      },
      "jsonapi_error_405": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "properties": {
                "errors": {
                  "example": {
                    "title": "Specified method is invalid for this resource",
                    "detail": "",
                    "code": "405"
                  },
                  "type": "string"
                }
              },
              "description": ""
            }
          }
        },
        "description": ""
      },
      "jsonapi_error_400": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "properties": {
                "errors": {
                  "example": {
                    "title": "Bad request syntax or unsupported method",
                    "detail": "",
                    "code": "400"
                  },
                  "type": "string"
                }
              },
              "description": ""
            }
          }
        },
        "description": ""
      },
      "jsonapi_error_500": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "properties": {
                "errors": {
                  "example": {
                    "title": "Server got itself in trouble",
                    "detail": "",
                    "code": "500"
                  },
                  "type": "string"
                }
              },
              "description": ""
            }
          }
        },
        "description": ""
      },
      "jsonapi_error_409": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "properties": {
                "errors": {
                  "example": {
                    "title": "Request conflict",
                    "detail": "",
                    "code": "409"
                  },
                  "type": "string"
                }
              },
              "description": ""
            }
          }
        },
        "description": ""
      },
      {% for component in response_components %}
      "{{ component }}": {{ response_components[component]}} {% if not loop.last %},{%endif %}
      {% endfor %}
    },
    "parameters": {
      "from": {
        "name": "from",
        "in": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "string",
          "format": "datetime",
          "default": ""
        }
      },
      "to": {
        "name": "to",
        "in": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "string",
          "format": "datetime",
          "default": ""
        }
      },
      "ids": {
        "name": "ids",
        "in": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "default": []
        }
      },
      "include": {
        "name": "include",
        "in": "query",
        "required": false,
        "description": "Relationships to include.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "page_size": {
        "name": "page[size]",
        "in": "query",
        "required": false,
        "description": "Max number of items",
        "schema": {
          "type": "integer",
          "format": "int64",
          "default": 30
        }
      },
      "page_number": {
        "name": "page[number]",
        "in": "query",
        "required": false,
        "description": "Page number to query",
        "schema": {
          "type": "integer",
          "format": "int64",
          "default": 1
        }
      },
      "created_at": {
        "name": "filter[created_at]",
        "in": "query",
        "required": false,
        "description": "created_at attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "updated_at": {
        "name": "filter[updated_at]",
        "in": "query",
        "required": false,
        "description": "updated_at attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "filter": {
        "name": "filter",
        "in": "query",
        "required": false,
        "description": "Custom filter",
        "schema": {
          "type": "string",
          "format": "string"
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "required": false,
        "description": "Sort order",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "id": {
        "name": "filter[id]",
        "in": "query",
        "required": false,
        "description": "id attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "updated_by_id": {
        "name": "filter[updated_by_id]",
        "in": "query",
        "required": false,
        "description": "updated_by_id attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "created_by_id": {
        "name": "filter[created_by_id]",
        "in": "query",
        "required": false,
        "description": "created_by_id attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "status": {
        "name": "filter[status]",
        "in": "query",
        "required": false,
        "description": "status attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "start_date": {
        "name": "filter[start_date]",
        "in": "query",
        "required": false,
        "description": "start_date attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "end_date": {
        "name": "filter[end_date]",
        "in": "query",
        "required": false,
        "description": "end_date attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "label": {
        "name": "filter[label]",
        "in": "query",
        "required": false,
        "description": "label attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "url": {
        "name": "filter[url]",
        "in": "query",
        "required": false,
        "description": "url attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "description": {
        "name": "filter[description]",
        "in": "query",
        "required": false,
        "description": "description attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "short_name": {
        "name": "filter[short_name]",
        "in": "query",
        "required": false,
        "description": "short_name attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "long_name": {
        "name": "filter[long_name]",
        "in": "query",
        "required": false,
        "description": "long_name attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "serial_number": {
        "name": "filter[serial_number]",
        "in": "query",
        "required": false,
        "description": "serial_number attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "manufacturer_uri": {
        "name": "filter[manufacturer_uri]",
        "in": "query",
        "required": false,
        "description": "manufacturer_uri attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "manufacturer_name": {
        "name": "filter[manufacturer_name]",
        "in": "query",
        "required": false,
        "description": "manufacturer_name attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "dual_use": {
        "name": "filter[dual_use]",
        "in": "query",
        "required": false,
        "description": "dual_use attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "model": {
        "name": "filter[model]",
        "in": "query",
        "required": false,
        "description": "model attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "inventory_number": {
        "name": "filter[inventory_number]",
        "in": "query",
        "required": false,
        "description": "inventory_number attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "persistent_identifier": {
        "name": "filter[persistent_identifier]",
        "in": "query",
        "required": false,
        "description": "persistent_identifier attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "website": {
        "name": "filter[website]",
        "in": "query",
        "required": false,
        "description": "website attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "device_type_uri": {
        "name": "filter[device_type_uri]",
        "in": "query",
        "required": false,
        "description": "device_type_uri attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "device_type_name": {
        "name": "filter[device_type_name]",
        "in": "query",
        "required": false,
        "description": "device_type_name attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "status_uri": {
        "name": "filter[status_uri]",
        "in": "query",
        "required": false,
        "description": "status_uri attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "status_name": {
        "name": "filter[status_name]",
        "in": "query",
        "required": false,
        "description": "status_name attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "platform_type_uri": {
        "name": "filter[platform_type_uri]",
        "in": "query",
        "required": false,
        "description": "platform_type_uri attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "platform_type_name": {
        "name": "filter[platform_type_name]",
        "in": "query",
        "required": false,
        "description": "platform_type_name attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "given_name": {
        "name": "filter[given_name]",
        "in": "query",
        "required": false,
        "description": "given_name attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "family_name": {
        "name": "filter[family_name]",
        "in": "query",
        "required": false,
        "description": "family_name attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "email": {
        "name": "filter[email]",
        "in": "query",
        "required": false,
        "description": "email attribute filter.",
        "schema": {
          "type": "string",
          "format": "string",
          "default": ""
        }
      },
      "hide_archived": {
        "name": "hide_archived",
        "description": "In general we hide archived objects. With this parameter those can be shown in the list search together with the non archived ones.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": "true"
        }
      },
      {% for component in parameter_components %}
      "{{ component }}": {{ parameter_components[component]}} {% if not loop.last %},{%endif %}
      {% endfor %}
    },
    "links": {
    },
    "callbacks": {
    }
  },
  "externalDocs": {
    "url": "https://codebase.helmholtz.cloud/hub-terra/sms/orchestration",
    "description": "https://codebase.helmholtz.cloud/hub-terra/sms/orchestration/-/blob/master/README.md"
  }
}
